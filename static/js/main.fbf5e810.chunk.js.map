{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/Input/Input.jsx","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","Input","handlerChange","name","value","type","placeholder","onChange","initialState","reduce","acc","NewMovie","state","event","target","setState","onAdd","preventDefault","addMovie","props","prevState","onSubmit","this","Component","App","moviesFromServer","ReactDOM","render","document","getElementById"],"mappings":"+xEAIaA,G,kBAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,OAAQC,EAA/B,EAA+BA,QAA/B,OACvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aAaRJ,EAAUS,aAAe,CACvBP,YAAa,ICxCR,IAAMQ,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxB,yBAAKN,UAAU,UACZM,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,SAgBxCH,EAAWD,aAAe,CACxBE,OAAQ,I,kBCvBGK,EAAQ,SAAC,GAAD,IAAGC,EAAH,EAAGA,cAAeC,EAAlB,EAAkBA,KAAMC,EAAxB,EAAwBA,MAAxB,OACnB,oCACE,2BACEC,KAAK,OACLf,UAAU,cACVa,KAAMA,EACNG,YAAW,gBAAWH,EAAX,OACXC,MAAOA,EACPG,SAAUL,MCNVJ,G,MAAQ,CACZ,QACA,cACA,SACA,UACA,WAGIU,EAAeV,EAAMW,QAAO,SAACC,EAAKN,GACtC,OAAO,2BACFM,GADL,kBAEGN,EAAQ,OAEV,IAEUO,EAAb,4MACEC,MAAQJ,EADV,EAGEN,cAAgB,SAACW,GAAW,IAAD,EACDA,EAAMC,OAAtBX,EADiB,EACjBA,KAAMC,EADW,EACXA,MAEd,EAAKW,SAAL,eACGZ,EAAOC,KAPd,EAWEY,MAAQ,SAACH,GACPA,EAAMI,iBADW,IAETC,EAAa,EAAKC,MAAlBD,SAER,EAAKH,UAAS,SAAAK,GAAS,OAAIF,EAASE,MACpC,EAAKL,SAAL,eACKP,KAjBT,uDAqBY,IAAD,OACP,OACE,0BAAMlB,UAAU,OAAO+B,SAAUC,KAAKN,OAElClB,EAAMD,KAAI,SAAAM,GAAI,OACZ,kBAAC,EAAD,CACEJ,IAAKI,EACLD,cAAe,EAAKA,cACpBC,KAAMA,EACNC,MAAO,EAAKQ,MAAMT,QAIxB,4BAAQE,KAAK,SAASf,UAAU,gBAAhC,sBAlCR,GAA8BiC,a,OCdjBC,EAAb,4MACEZ,MAAQ,CACNhB,OAAQ6B,GAFZ,EAKEP,SAAW,SAACpB,GACV,EAAKiB,UAAS,SAAAK,GAAS,MAAK,CAC1BxB,OAAO,GAAD,mBACDwB,EAAUxB,QADT,CAEJE,SATR,uDAcY,IACAF,EAAW0B,KAAKV,MAAhBhB,OAER,OACE,yBAAKN,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYM,OAAQA,KAEtB,yBAAKN,UAAU,WACb,kBAAC,EAAD,CAAU4B,SAAUI,KAAKJ,iBAvBnC,GAAyBK,aCDzBG,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.fbf5e810.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Input = ({ handlerChange, name, value }) => (\n  <>\n    <input\n      type=\"text\"\n      className=\"form__input\"\n      name={name}\n      placeholder={`Enter ${name}...`}\n      value={value}\n      onChange={handlerChange}\n    />\n  </>\n);\n\nInput.propTypes = {\n  handlerChange: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Input } from '../Input';\nimport './NewMovie.scss';\n\nconst movie = [\n  'title',\n  'description',\n  'imgUrl',\n  'imdbUrl',\n  'imdbId',\n];\n\nconst initialState = movie.reduce((acc, value) => {\n  return {\n    ...acc,\n    [value]: '',\n  };\n}, {});\n\nexport class NewMovie extends Component {\n  state = initialState;\n\n  handlerChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  onAdd = (event) => {\n    event.preventDefault();\n    const { addMovie } = this.props;\n\n    this.setState(prevState => addMovie(prevState));\n    this.setState({\n      ...initialState,\n    });\n  }\n\n  render() {\n    return (\n      <form className=\"form\" onSubmit={this.onAdd}>\n        {\n          movie.map(name => (\n            <Input\n              key={name}\n              handlerChange={this.handlerChange}\n              name={name}\n              value={this.state[name]}\n            />\n          ))\n        }\n        <button type=\"submit\" className=\"form__button\">\n          Add new movie\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(prevState => ({\n      movies: [\n        ...prevState.movies,\n        movie,\n      ],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}